DATAS SEGMENT
     TABLE DB 3FH,06H,5BH,4FH,66H,6DH,7DH,07H,7FH,6FH
     X1 DB 0
     X2 DB 0
DATAS ENDS

STACKS SEGMENT
    DB 100 DUP('STACKS')
STACKS ENDS

CODES SEGMENT
    ASSUME CS:CODES,DS:DATAS,SS:STACKS
MAIN PROC
    MOV AX,DATAS
    MOV DS,AX
    ADDR1 EQU 28BH
    ADDRA EQU 288H
    ADDRC EQU 28AH
    CALL INPUT
    AND AL,0FH
    MOV X1,AL
    CALL INPUT
    AND AL,0FH
    MOV X2,AL
    
GOON:MOV DX,ADDR1
    MOV AL,10000010B
    OUT DX,AL
    MOV DX,ADDRA
    MOV AL,X1
    MOV BX,OFFSET TABLE
    XLAT TABLE
    MOV DX,ADDRA
    OUT DX,AL
    MOV DX,ADDRC
    MOV AL,00000010B
    OUT DX,AL
    CALL DELAY
    
    MOV AL,X2
    MOV BX,OFFSET TABLE
    XLAT TABLE
    MOV DX,ADDRA
    OUT DX,AL
    MOV DX,ADDRC
    MOV AL,00000001B
    OUT DX,AL
    CALL DELAY
    
    MOV AH,8H
    INT 21H
    CMP AL,'s'
    JNZ GOON
    
    MOV AH,4CH
    INT 21H
MAIN ENDP

INPUT PROC
AGAIN:MOV AH,8H
	INT 21H
	CMP AL,30H
	JB AGAIN
	CMP AL,39H
	JA AGAIN
	MOV DL,AL
	MOV AH,2H
	INT 21H
	RET
INPUT ENDP

DELAY PROC
	MOV BL,9H
NEXT1:MOV CX,0
NEXT2:LOOP NEXT2
	DEC BL
	JNZ NEXT1
	RET
DELAY ENDP

CODES ENDS
    END MAIN
